# -*- coding: utf-8 -*-
"""Sentimental Analysis using BERT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F-rzzmL5EzFS43Jye0Lp97gewpfLakB5
"""

!pip install transformers pandas

import pandas as pd
from transformers import pipeline
from tqdm import tqdm

#sample data
tweets = [
    "I had a great experience flying with United Airlines!",
    "The flight was delayed and customer service was terrible.",
    "Nothing special, just a normal trip.",
    "Worst flight ever. Never flying again.",
    "Amazing service and friendly crew!"
]

sentiment_classifier = pipeline("sentiment-analysis")
for tweet in tweets:
    result = sentiment_classifier(tweet)[0]
    print(f"Tweet: {tweet}")
    print(f"Prediction: {result['label']} | Confidence: {round(result['score'], 2)}\n")

df = pd.read_csv('Tweets.csv')
df.head()

df = df[['text','airline_sentiment']].dropna()
df.head()

sentiment = pipeline(
    "sentiment-analysis",
    model="cardiffnlp/twitter-roberta-base-sentiment-latest",
    tokenizer="cardiffnlp/twitter-roberta-base-sentiment-latest",
)

df_sample = df.sample(100, random_state=42).copy()
df_sample['bert_sentiment3'] = df_sample['text'].apply(lambda t: sentiment(t)[0]['label'].lower())

# Normalize the predicted labels to lowercase
df_sample['bert_sentiment3'] = df_sample['bert_sentiment3'].str.lower()

from sklearn.metrics import classification_report, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

print(classification_report(df_sample['airline_sentiment'], df_sample['bert_sentiment3']))

# Confusion matrix
cm = confusion_matrix(df_sample['airline_sentiment'], df_sample['bert_sentiment3'])
sns.heatmap(cm, annot=True, xticklabels=['negative','neutral','positive'], yticklabels=['negative','neutral','positive'], cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix - BERT vs Actual')
plt.show()